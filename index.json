[{"authors":["admin"],"categories":null,"content":"Sometimes you don\u0026rsquo;t know what you want until you just do. I had no clue what career I wanted to pursue after finishing college, but I did know that I wanted to live a life of adventure! Luckily, my path led me into the military where I had the opportunity to travel all over the world to lead various healthcare teams and hone my leadership ability. More importantly though it gave me time to reflect on what I wanted to do in life. I eventually realized it was time to hang up the boots and head out for my next adventure.\nI decided to go back to school and learn how to program because tech was something that had always fascinated me. I remember coming across various articles on TechCrunch and being so envious of the projects being funded. These were people who saw problems that could be solved by leveraging technology. These were people who were trying to redefine the status quo. These were people who were busy building the future and I wanted to be one of them! I wanted to learn how to build and turn ideas into reality.\nAs a new software engineer, I would very much describe myself as a generalist with an interest in machine learning, distributed systems, and security. My primary programming languages would be Python and Java, but I am fairly comfortable in C++ and JavaScript as well. If I had to choose between being a backend engineer and frontend engineer, I\u0026rsquo;d probably choose the backend since I like to tinker with the server and database. Ideally, I\u0026rsquo;m just looking to join an ambitious team working to solve complex problems with innovative solutions. If you have an opening, let\u0026rsquo;s definitely chat and see if their is a fit. I\u0026rsquo;m also always open to discussing the military or tech (like the nuances of read committed isolation vs snapshot isolation) as well so don\u0026rsquo;t be a stranger.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://vengaza.github.io/author/dustin-jones/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/dustin-jones/","section":"authors","summary":"Sometimes you don\u0026rsquo;t know what you want until you just do. I had no clue what career I wanted to pursue after finishing college, but I did know that I wanted to live a life of adventure!","tags":null,"title":"Dustin Jones","type":"authors"},{"authors":null,"categories":null,"content":"The 2019 Codebreaker Challenge consists of a series of tasks that are worth a varying amount of points based upon their difficulty. All tasks will become available immediately once the Challenge goes live and can be solved in any order, though there may be some dependencies between tasks. The point value associated with each task is based on relative difficulty and schools will be ranked according to the total number of points accumulated by their students. It is still recommended to solve tasks in order since the tasks flow with the storyline, but that is not a requirement. Solutions may be submitted at any time for the duration of the Challenge. Good luck!\nBackground DISCLAIMER - The following is a FICTITIOUS story meant for providing realistic context for the Codebreaker Challenge and is not tied in any way to actual events.\nTech savvy terrorists have developed a new suite of communication tools to use for attack planning purposes. Their most recent creation — TerrorTime — is a secure mobile chat application that runs on Android devices. This program is of particular interest since recent intelligence suggests the majority of their communications are happening via this app. Your mission is to reverse-engineer and develop new exploitation capabilities to help discover and thwart future attacks before they happen. There are 7 tasks of increasing difficulty that you will be working through as part of this challenge. Ultimately, you will be developing capabilities that will enable the following:\nSpoof TerrorTime messages Masquerade (i.e., authenticate) as TerrorTime users without knowledge of their credentials Decrypt TerrorTime chat messages The first three tasks of the challenge will provide you with everything you need to install and run TerrorTime in an Android emulator. You will also discover account information for two TerrorTime users, which will enable you to send chat messages between the users by running the app in two emulators. Beginning with Task 4, the difficulty will increase significantly as you begin working towards the goals outlined above. We hope you enjoy the challenge!\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"9d2b88ffbc7c03f21cd7f3f2bd72896e","permalink":"https://vengaza.github.io/ctf/nsacodebreaker2019/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/ctf/nsacodebreaker2019/","section":"ctf","summary":"The 2019 Codebreaker Challenge consists of a series of tasks that are worth a varying amount of points based upon their difficulty.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":"In this walkthrough, we\u0026rsquo;ll go through each of the tasks from the Google 2019 CTF event. I thought it would be fun to document my journey learning various security concepts and reinforce the concepts by creating a few tutorials.\nWhat is Google CTF Google runs a CTF competition in two rounds: an online qualification round and an onsite final round. The top 10 teams from the qualification round will be invited to the finals to compete onsite for a prize pool of more than USD $31,337. In addition to the grand prizes, some of the best and creative write-ups that we receive during the qualifying round will be rewarded as well. We want to give you an opportunity to share with the world the clever ways you solve challenges.\nAbout \u0026ldquo;Capture The Flag\u0026rdquo; (CTF) competitions (in the cybersecurity sense) are not related to running outdoors or playing first-person shooters. Instead, they consist of a set of computer security puzzles (or challenges) involving reverse-engineering, memory corruption, cryptography, web technologies, and more. When players solve them they get a \u0026ldquo;flag,\u0026rdquo; a secret string which can be exchanged for points. The more points a team earns, the higher up it moves in rank.\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"3d23d5506065705b4171ffb1cb85f188","permalink":"https://vengaza.github.io/ctf/googlectf2019/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/ctf/googlectf2019/","section":"ctf","summary":"Google Capture the Flag competition","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":"Various challenges from HackTheBox\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"f6e2c1fe7a7ee0db21a7c84aed5120b9","permalink":"https://vengaza.github.io/ctf/hackthebox/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/ctf/hackthebox/","section":"ctf","summary":"An online platform to test and advance your skills in penetration testing and cyber security. Join today and start training in our online labs.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":"You are a simple life form, exiled from your home planet and in search of a new place to call home. The ruling came fast. Your taste in music was deemed to be far too \u0026ldquo;out-there-man\u0026rdquo; for anyone to possibly associate with you anymore. You were given 60 revolutions of Xenon around Fir to leave and never return. Gather whatever possessions and leave. You find your parents music collection, oddly in it is a golden disc labelled \u0026ldquo;Property of NASA, if lost please return to: EVNJAKL 1600 Ampitheatre Parkway Mountain View California.\u0026rdquo; The music on the disc was uncovered a while back and was not very interesting. This weird language that said something about \u0026ldquo;Peace, love and rock and roll. Also we\u0026rsquo;re having a really cool party tonight, so for whoever is out there, bring a friend and come along! Co-ordinates enclosed.\u0026rdquo; On the back the words \u0026ldquo;Draft, do not distribute or load onto probe\u0026rdquo; written in big red letters. That could mean anything.\nYou\u0026rsquo;ll go, since you have nowhere else to go. But you\u0026rsquo;ll be careful. You well know to learn all you can about alien beings before making contact. They could be hostile, or listen to boring music. Time is slipping away fast, you race aboard the nearest ObarPool Spaceship. But you\u0026rsquo;ve never driven one\u0026hellip; what next genius?\nTask: Enter Space-Time Coordinates (Misc) Ok well done. The console is on. It\u0026rsquo;s asking for coordinates. Beating heavily on the console yields little results, but the only time anything changes on your display is when you put in numbers.. So what numbers are you going to go for? You see the starship\u0026rsquo;s logs, but is there a manual? Or should you just keep beating the console?\n Task Files\nSolution Go ahead and download the Task Files and navigate to the folder in your command line client (I\u0026rsquo;ll be using Linux). Using the ls command, we\u0026rsquo;ll list out the files to determine what we have to work with. In this task, we are given two files: a .txt file and an executable binary.\n  List out files using ls   Let\u0026rsquo;s go ahead and check what is in the text file. We\u0026rsquo;ll use the cat command to print out the contents of the text tile to the console. Unfortunately, there does not seem to be anything of note here.\n  Run CAT output of log.txt   Next, we will go ahead and execute the binary(If you do not have execute permission, run the following command chmod +x). It looks like this binary is the menu interface for the spaceship. Incidentally, the CTF destination is redacted and we get an error message when we input coordinates.\n  Run the binary file   Exit out of the program with ^c. Let\u0026rsquo;s see if we can brute force the flag out of the binary by running the strings command on the ./rand2 binary. This technique allows us to parse out the plain text from a binary file. We see that there are plenty of plain text strings within this file, so we need a fast way to search through.\n  Run strings   Fortunately, GREP will come to the rescue. We\u0026rsquo;ll pipe the output of strings into grep input using the following command strings ./rand2 | grep flag. There is our flag!\n  Grep the strings output   Flag: CTF{welcome_to_googlectf}\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"30c8d61f5101611ab6b632b8122486d7","permalink":"https://vengaza.github.io/ctf/googlectf2019/001invitation/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/ctf/googlectf2019/001invitation/","section":"ctf","summary":"You are a simple life form, exiled from your home planet and in search of a new place to call home. The ruling came fast. Your taste in music was deemed to be far too \u0026ldquo;out-there-man\u0026rdquo; for anyone to possibly associate with you anymore.","tags":null,"title":"Invitation","type":"docs"},{"authors":null,"categories":null,"content":"You are a simple life form, exiled from your home planet and in search of a new place to call home. The ruling came fast. Your taste in music was deemed to be far too \u0026ldquo;out-there-man\u0026rdquo; for anyone to possibly associate with you anymore. You were given 60 revolutions of Xenon around Fir to leave and never return. Gather whatever possessions and leave. You find your parents music collection, oddly in it is a golden disc labelled \u0026ldquo;Property of NASA, if lost please return to: EVNJAKL 1600 Ampitheatre Parkway Mountain View California.\u0026rdquo; The music on the disc was uncovered a while back and was not very interesting. This weird language that said something about \u0026ldquo;Peace, love and rock and roll. Also we\u0026rsquo;re having a really cool party tonight, so for whoever is out there, bring a friend and come along! Co-ordinates enclosed.\u0026rdquo; On the back the words \u0026ldquo;Draft, do not distribute or load onto probe\u0026rdquo; written in big red letters. That could mean anything.\nYou\u0026rsquo;ll go, since you have nowhere else to go. But you\u0026rsquo;ll be careful. You well know to learn all you can about alien beings before making contact. They could be hostile, or listen to boring music. Time is slipping away fast, you race aboard the nearest ObarPool Spaceship. But you\u0026rsquo;ve never driven one\u0026hellip; what next genius?\nTask: Enter Space-Time Coordinates (Misc) Ok well done. The console is on. It\u0026rsquo;s asking for coordinates. Beating heavily on the console yields little results, but the only time anything changes on your display is when you put in numbers.. So what numbers are you going to go for? You see the starship\u0026rsquo;s logs, but is there a manual? Or should you just keep beating the console?\n Task Files\nSolution ","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"275e23ca3683889fa80435ecaba72a5d","permalink":"https://vengaza.github.io/ctf/hackthebox/001invitation/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/ctf/hackthebox/001invitation/","section":"ctf","summary":"You are a simple life form, exiled from your home planet and in search of a new place to call home. The ruling came fast. Your taste in music was deemed to be far too \u0026ldquo;out-there-man\u0026rdquo; for anyone to possibly associate with you anymore.","tags":null,"title":"Invitation","type":"docs"},{"authors":null,"categories":null,"content":"It Begins! (Network Traffic Analysis) There are many challenges that we will need to overcome in order to exploit TerrorTime. The first is that we do not yet have a copy of it. We have learned few details through intelligence sources, but the terrorists have managed to keep the app hidden. It is not publicly available on any App Store. Fortunately, as part of a recent military operation, specialized collection gear was forward deployed near the terrorist\u0026rsquo;s area of operations. This resulted in a trove of collected traffic and we need your help to analyze it. Your first task is to find and extract a copy of the TerrorTime Android Package (APK) file from the packet capture. Submit the APK\u0026rsquo;s SHA256 hash. This will help us search other intelligence sources for connections to users. To test out the app, we also need the registration information their leadership uses to register each client. Analyze the packet capture for this data and submit the registration information for 2 clients (in any order).\nFlags  SHA256 Hash of the Terrotime APK (Hexadecimal/Base16 encoded) Client IDs and Secrets (one pair of credentials per line, separated by colon)   Task Files\n Solution Commands  cat - read and conCATenate files (Linux/OSX) sha256sum - compute and check SHA256 message digest (Linux/OSX) File-GetHash - compute and check SHA256 message digest (Windows)  Tools   WireShark - Network Protocol Analyzer  Analysis In this challenge, we are given a .pcapng file which is a packet capture format that contains a dump of data packets caught over a network. We will use WireShark, a network protocol analyzer, to open this file and view the captured data packets.\n  Packets in wireshark   Even though there are over 9000 packets in this dump, we immediately notice that the 4th packet stands out because the \u0026ldquo;terrorTime\u0026rdquo; name is mentioned in its information section. This packet was sent using an application layer protocol called HTTP. Let\u0026rsquo;s use a Wireshark filter to reduce the noise and list only the packets using the HTTP protocol.\n* If the HTTP packet had not been so obvious, another technique would have been to checkout the protocol hierarchy of the dump: STATISTICS \u0026gt; PROTOCOL HIERARCHY. This is an excellent tool to use to gain more insight into the dump when looking for clues.\n  HTTP Packets in wireshark   ~9000 packets have now been reduced to 4! There are 2 GET requests with 2 responses which seem to have file objects associated with them. The first file is the missing APK. The other seems to be a text document. We\u0026rsquo;ll extract and save these files with WireShark: FILE \u0026gt; EXPORT OBJECTS \u0026gt; HTTP \u0026gt; SAVE.\n  Extracting the http files   With the terrortime.apk in hand, we can now run the sha256sum command on the APK file to determine its hash value and complete the first task.\n$ sha256sum terrortime.apk $ 65f87dfb701694d5b72963e6b707fda6882de72612af59296c255bef00a3699e terrortime.apk  We also need to locate the registration information for 2 clients. Let\u0026rsquo;s investigate the README.developer file we extracted earlier to see if there are any hints. This file can be opened up using a text editor or you use the cat command to print the file out to the terminal.\n$ cat README.developer ------------------ terrorTime.apk -- Most current version of terrortime APK for android mobile devices ava--vhost-10@terrortime.app -- First Terrortime test account client id emmett--vhost-10@terrortime.app -- Second Terrortime test account client id 7rIFNGekGSE6Ai -- First Terrortime test account client secret BJMwJzGTkKDgB2 -- Second Terrortime test account client secret Used above client information for testing. See test report in Master. Dev bobs comments on most recent APK code changes --------------------------------------------------- (20190613) Beta version of Terrortime app completed. Successfully tested. Waiting for customer feedback. (20190723) Had to make some notable changes to Terrortime authentication mechanisms based on new Customer requirements (as of this week). Code changes were just committed to Master. Not pretty, but will support future operational needs (didnt ask ...dont want to know the details). Changes also support recently clarified deployment/use CONOP. App will be installed and pre-configured on mobile device before device is given to associate. Associate must use app as configured to interact with Terrortime chat service and will not be provided plaintext version of credentials required for part of authentication process. App will use its credentials to authenticate itself to Terrortime infrastructure, a process that will be transparent to user/associate. Associate will be provided a PIN that allows him/her to open Terrortime app. See design documentation in Master README file for details. (20190725) After a few bug fixes, Terrortime app passed testing. No rest for the weary. (20190726) Packaged up and ready to ship! $$$$  Luckily, the information we are looking for is revealed within this file with 2 accounts listed along with the client secrets. How convenient 😄\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"05b6f9977c78395aa12182cca6c8cd4e","permalink":"https://vengaza.github.io/ctf/nsacodebreaker2019/001task1/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/ctf/nsacodebreaker2019/001task1/","section":"ctf","summary":"It Begins! (Network Traffic Analysis) There are many challenges that we will need to overcome in order to exploit TerrorTime. The first is that we do not yet have a copy of it.","tags":null,"title":"Task 1","type":"docs"},{"authors":null,"categories":null,"content":"Having successfully figured out this \u0026ldquo;coordinate\u0026rdquo; problem. The ship lurches forward violently into space. This is one of the moments when you realize that some kind of thought or plan would have been good, but typically for you and how you found yourself in this situation, you didn\u0026rsquo;t think too much before acting. Only the stars themselves know where you\u0026rsquo;ll end up.\nAfter what seems like an eternity, or at least one full season of \u0026ldquo;Xenon\u0026rsquo;s Next Top Galactic Overlord\u0026rdquo; you arrive in a system of 9 planetary bodies, though one of them is exceptionally small. You nostalgically remember playing explodatoid with your friends and hunting down planets like this. But this small planet registers a hive of noise and activity on your ships automated scanners. There\u0026rsquo;s things there! Billions upon trillions of things, moving around, flying, swimming, sliding, falling.\nOf particular interest may be the insect-like creatures flying around this planet, uniformly. One has the words \u0026ldquo;Osmium Satellites\u0026rdquo; written on it. Maybe this is a starting point to get to know what\u0026rsquo;s ahead of you.\nTask: Satellite (Networking) Placing your ship in range of the Osmiums, you begin to receive signals. Hoping that you are not detected, because it\u0026rsquo;s too late now, you figure that it may be worth finding out what these signals mean and what information might be \u0026ldquo;borrowed\u0026rdquo; from them. Can you hear me Captain Tim? Floating in your tin can there? Your tin can has a wire to ground control?\nFind something to do that isn\u0026rsquo;t staring at the Blue Planet.\n Task Files\nSolution ","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"632146c5c10a202f7b903eb39b0acc33","permalink":"https://vengaza.github.io/ctf/googlectf2019/002arrivalrecon/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/ctf/googlectf2019/002arrivalrecon/","section":"ctf","summary":"Having successfully figured out this \u0026ldquo;coordinate\u0026rdquo; problem. The ship lurches forward violently into space. This is one of the moments when you realize that some kind of thought or plan would have been good, but typically for you and how you found yourself in this situation, you didn\u0026rsquo;t think too much before acting.","tags":null,"title":"Arrival \u0026 Reconnaissance","type":"docs"},{"authors":null,"categories":null,"content":"Having successfully figured out this \u0026ldquo;coordinate\u0026rdquo; problem. The ship lurches forward violently into space. This is one of the moments when you realize that some kind of thought or plan would have been good, but typically for you and how you found yourself in this situation, you didn\u0026rsquo;t think too much before acting. Only the stars themselves know where you\u0026rsquo;ll end up.\nAfter what seems like an eternity, or at least one full season of \u0026ldquo;Xenon\u0026rsquo;s Next Top Galactic Overlord\u0026rdquo; you arrive in a system of 9 planetary bodies, though one of them is exceptionally small. You nostalgically remember playing explodatoid with your friends and hunting down planets like this. But this small planet registers a hive of noise and activity on your ships automated scanners. There\u0026rsquo;s things there! Billions upon trillions of things, moving around, flying, swimming, sliding, falling.\nOf particular interest may be the insect-like creatures flying around this planet, uniformly. One has the words \u0026ldquo;Osmium Satellites\u0026rdquo; written on it. Maybe this is a starting point to get to know what\u0026rsquo;s ahead of you.\nTask: Satellite (Networking) Placing your ship in range of the Osmiums, you begin to receive signals. Hoping that you are not detected, because it\u0026rsquo;s too late now, you figure that it may be worth finding out what these signals mean and what information might be \u0026ldquo;borrowed\u0026rdquo; from them. Can you hear me Captain Tim? Floating in your tin can there? Your tin can has a wire to ground control?\nFind something to do that isn\u0026rsquo;t staring at the Blue Planet.\n Task Files\nSolution ","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"5ca5f65a0bd49a5ed18b9e5a1b73b591","permalink":"https://vengaza.github.io/ctf/hackthebox/002arrivalrecon/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/ctf/hackthebox/002arrivalrecon/","section":"ctf","summary":"Having successfully figured out this \u0026ldquo;coordinate\u0026rdquo; problem. The ship lurches forward violently into space. This is one of the moments when you realize that some kind of thought or plan would have been good, but typically for you and how you found yourself in this situation, you didn\u0026rsquo;t think too much before acting.","tags":null,"title":"Arrival \u0026 Reconnaissance","type":"docs"},{"authors":null,"categories":null,"content":"Task: Home Computer (Forensics) Blunderbussing your way through the decision making process, you figure that one is as good as the other and that further research into the importance of Work Life balance is of little interest to you. You\u0026rsquo;re the decider after all. You confidently use the credentials to access the \u0026ldquo;Home Computer.\u0026rdquo;\nSomething called \u0026ldquo;desktop\u0026rdquo; presents itself, displaying a fascinating round and bumpy creature (much like yourself) labeled \u0026ldquo;cauliflower 4 work - GAN post.\u0026rdquo; Your 40 hearts skip a beat. It looks somewhat like your neighbors on XiXaX3. ..Ah XiXaX3\u0026hellip; You\u0026rsquo;d spend summers there at the beach, an awkward kid from ObarPool on a family vacation, yearning, but without nerve, to talk to those cool sophisticated locals.\nSo are these \u0026ldquo;Cauliflowers\u0026rdquo; earthlings? Not at all the unrelatable bipeds you imagined them to be. Will they be at the party? Hopefully SarahH has left some other work data on her home computer for you to learn more.\n Task Files\nSolution ","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"c19cd57e227abba8d2a85d618e1ae432","permalink":"https://vengaza.github.io/ctf/googlectf2019/003home/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/ctf/googlectf2019/003home/","section":"ctf","summary":"Task: Home Computer (Forensics) Blunderbussing your way through the decision making process, you figure that one is as good as the other and that further research into the importance of Work Life balance is of little interest to you.","tags":null,"title":"Home","type":"docs"},{"authors":null,"categories":null,"content":"Permissions (Mobile APK Analysis) The TerrorTime APK file contains metadata that describes various security properties of the application that we want to know. Since we now have a copy of the APK thanks to the military operation described in Task 1, we need you to identify and submit the following:\nFlags  App Permissions (Capital letters and underscores, one per line) SHA256 of Signing Certificate (Hexadecimal/Base16 encoded) Certificate Signer Name (ASCII)  Please note that completion of task 1 is required to complete this task.\n Task Files\nSolution Commands  apkanlyzer -h manifest permissions \u0026lt;FILE.APK\u0026gt; - Print application permissions File-GetHash - compute and check SHA256 message digest (Windows)  Tools   Android Studio - Google IDE for Android  Ghidra - NSA\u0026rsquo;s software reverse engineering suite (Optional)  Analysis In this challenge, we\u0026rsquo;ll continue analyzing the Terrortime APK we recovered in the previous challenge. We first need to figure out the application\u0026rsquo;s permissions. It is first important to understand what an APK file actually is.\n Android Package (APK)[1] is the package file format used by the Android, and a number of other Android-based operating systems for distribution and installation of mobile apps, mobile games and middleware.\n\u0026ndash; https://en.wikipedia.org/wiki/Android_application_package\n It is also important to realize that an APK is a compiled file meaning the source code (human readable) has been transformed into machine code (computer executable). This makes it difficult to do any meaningful analysis without first figuring out a way to decompile the file to make it human readable once again. A great tool for this was released by the NSA, Ghidra. There are also other tools such JADX and APKtool. I will not be making use of these tools for this challenge, but they are important tools to be aware of when the need to reverse arises.\n* Tip: APK files can also be unzipped by changing the file extension from APK to ZIP.\nIf we look at the objectives for this task, we should take notice that the information being requested is just the application metadata (attributes) of the file itself which means there should be no need to decompile. We just need to figure out a way to view the metadata since this capability is not natively built into our operating system. Enter Android Studio, Google\u0026rsquo;s official Android integrated development environment (IDE) which comes with a variety of tools to make the development of Android applications easier. We are specifically interested in the Android Software Development Kit (SDK) within Android Studio which provides access to some powerful command line tools to assist in our analysis.\n* Tip: Whenever doing an analysis on unfamiliar software, always check to see if an SDK exists and what tools the devolpers are using!\nBecause I have not spent any time developing Android applications, I had to go through the documentation to find tools for the task. The first command line tool I came across which seemed helpful was the apkanalyzer. This package provides us with the apkanalyzer -h manifest permissions command and allows us to print out the permissions for the APK file. Perfect!\n$ apkanalyzer -h manifest permissions terrorTime.apk $ android.permission.INTERNET $ android.permission.ACCESS_NETWORK_STATE  We now have the APK permissions, but what do these permissions actually mean? Upon further review of the Android documentation we discover:\n ACCESS_NETWORK_STATE: Allows applications to access information about networks. INTERNET: Allows applications to open network sockets.\n The next part of the task requires us to find certificate information. Luckily, there is another package within the Android SDK called apksigner. This package provides us with the apksigner verify --print-certs command and allows us to print out information about the APK\u0026rsquo;s signing certificates.\n$ apksigner verify --print-certs terrorTime.apk $ Signer #1 certificate DN: CN=dev_terrorTime_378361, OU=TSuite $ Signer #1 certificate SHA-256 digest: 2bcd16e90870731a7c298348ead84dc8403d16c63509b36fbc26e469fa697961 $ Signer #1 certificate SHA-1 digest: c4db0963ba6fb32b4c9f3515f71040e68f670685 $ Signer #1 certificate MD5 digest: 7fe6476d39c9fe7f81d32ccbf651eff2  As we can see, this command prints out the certificate information and provides both the SHA256 of the signing certificate and the common name (CN) of the developer who signed it.\n* Note: Do not be discouraged if you were unable to get the Android SDK commands up and running. Admittedly, I ran into issues with with the SDK not playing nice the various versions of Java on my machine. This required some tinkering with my .zshrc to make sure the right JDK version was being used.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"56fc20c60b86f8ec09cecb06c1d9fdff","permalink":"https://vengaza.github.io/ctf/nsacodebreaker2019/002task2/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/ctf/nsacodebreaker2019/002task2/","section":"ctf","summary":"Permissions (Mobile APK Analysis) The TerrorTime APK file contains metadata that describes various security properties of the application that we want to know. Since we now have a copy of the APK thanks to the military operation described in Task 1, we need you to identify and submit the following:","tags":null,"title":"Task 2","type":"docs"},{"authors":null,"categories":null,"content":"Turn of Events (Database Analysis) Analysts found TerrorTime installed on a device that was taken from a terrorist arrested at a port of entry in the US. They were able to recover the SQLite database from the TerrorTime installation on the device, which should provide us with more in-depth knowledge about the terrorist\u0026rsquo;s communications and the TerrorTime infrastructure. Your goal for this task is to analyze the database and submit the addresses of the TerrorTime OAUTH (authentication) and XMPP (chat) servers.\nFlags  OAUTH IP Address XMPP Server IP Address   Task Files\nSolution Commands  apkanlyzer -h manifest permissions \u0026lt;FILE.APK\u0026gt; - Print application permissions File-GetHash - compute and check SHA256 message digest (Windows)  Tools   Android Studio - Google IDE for Android  Ghidra - NSA\u0026rsquo;s software reverse engineering suite (Optional)  Analysis Coming soon\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"005fb6ba3e16175bfba39a81332be3e3","permalink":"https://vengaza.github.io/ctf/nsacodebreaker2019/003task3/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/ctf/nsacodebreaker2019/003task3/","section":"ctf","summary":"Turn of Events (Database Analysis) Analysts found TerrorTime installed on a device that was taken from a terrorist arrested at a port of entry in the US. They were able to recover the SQLite database from the TerrorTime installation on the device, which should provide us with more in-depth knowledge about the terrorist\u0026rsquo;s communications and the TerrorTime infrastructure.","tags":null,"title":"Task 3","type":"docs"},{"authors":null,"categories":null,"content":"Schemes (Cryptography; Reverse Engineering; Language Analysis) While analyzing the TerrorTime SQLite database found on the terrorist’s device, analysts discovered that the database has cached credentials but requires a pin to log in. If we can determine how the credentials are protected and find a way to recover the pin, we should be able to masquerade as the arrested terrorist. Perform reverse engineering to identify how the terrorist’s credentials are protected and submit the terrorist\u0026rsquo;s Client ID and Client Secret. Once you have uncovered their credentials, masquerade (i.e., login) as him using the TerrorTime app. Review their chat history and assess additional information regarding their organization. Though the app encrypts messages back and forth, the terrorists have previously spoken in some form of code to ensure their plans were protected. To prove completion of this task, you will need to analyze the terrorist\u0026rsquo;s conversation history in order to uncover/deduce the following information:\nFlags  Cell Leader Username (ASCII) Action Date (Unix timestamp, integer)  Solution Commands  apkanlyzer -h manifest permissions \u0026lt;FILE.APK\u0026gt; - Print application permissions File-GetHash - compute and check SHA256 message digest (Windows)  Tools   Android Studio - Google IDE for Android  Ghidra - NSA\u0026rsquo;s software reverse engineering suite (Optional)  Analysis Coming soon\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"3b26741063f03557b38c79108d872f0a","permalink":"https://vengaza.github.io/ctf/nsacodebreaker2019/004task4/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/ctf/nsacodebreaker2019/004task4/","section":"ctf","summary":"Schemes (Cryptography; Reverse Engineering; Language Analysis) While analyzing the TerrorTime SQLite database found on the terrorist’s device, analysts discovered that the database has cached credentials but requires a pin to log in.","tags":null,"title":"Task 4","type":"docs"},{"authors":null,"categories":null,"content":"Masquerade (Vulnerability Analysis) The app uses a bespoke application of the OAUTH protocol to authorize and authenticate TerrorTime users to the chat service. Our intelligence indicates that individual terrorists are provided phones with TerrorTime installed and pre-registered to them. They simply need to enter their username and secret PIN to access the chat service, which uses OAUTH behind the scenes to generate a unique token that is used for authentication. This is a non-standard way of using the protocol, but they believe it to be superior to normal password-based authentication since a unique token is used per login vs. a static password. Whether that is indeed the case is up to you to analyze and assess for possible vulnerabilities. Our forensics team recovered a deleted file from the terrorist\u0026rsquo;s hard drive that may aid in your analysis.\nThrough other intelligence means, we know that the arrested terrorist is a member of one of many cells in a larger organization. He has shown no signs of someone who is acting in a leadership role \u0026ndash; he simply carries out orders given to him from his cell leader, who is likely relaying information from the top-level organizational leader. To uncover information from the cell leader’s conversations, we need access to their account. The messages are end-to-end encrypted, so without the leader\u0026rsquo;s private key we won\u0026rsquo;t be able to decrypt his messages, but we may be able to learn more about the members of the cell and the organization\u0026rsquo;s structure. Analyze the client and server-side components of the authentication process and find a way to masquerade as arbitrary users without knowing their credentials. Take advantage of this vulnerability and masquerade as the cell leader. Access and review the cell leader’s relevant information stored on the server. Use this information to identify and submit the top-level organizational leader’s username and go a step further and submit a copy of the last (still encrypted) message body from the organization leader’s chat history. It’s suggested to complete task 4 before attempting this task as task 4 aids in discovering the cell leader’s identity.\nFlags  The username of the Top-Level Organization Leader (ASCII) Last encrypted message body from the Top-Level Organization Leader\u0026rsquo;s chat history (JSON)   Task Files\nSolution Commands  apkanlyzer -h manifest permissions \u0026lt;FILE.APK\u0026gt; - Print application permissions File-GetHash - compute and check SHA256 message digest (Windows)  Tools   Android Studio - Google IDE for Android  Ghidra - NSA\u0026rsquo;s software reverse engineering suite (Optional)  Analysis Coming soon\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"47da6910d4ca1c08e96bcd80f5c63d70","permalink":"https://vengaza.github.io/ctf/nsacodebreaker2019/005task5/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/ctf/nsacodebreaker2019/005task5/","section":"ctf","summary":"Masquerade (Vulnerability Analysis) The app uses a bespoke application of the OAUTH protocol to authorize and authenticate TerrorTime users to the chat service. Our intelligence indicates that individual terrorists are provided phones with TerrorTime installed and pre-registered to them.","tags":null,"title":"Task 5","type":"docs"},{"authors":[],"categories":[],"content":"It has been a long time coming for me to take the time to create a personal portfolio page. I have been putting this off for years because I was so focused on finding the \u0026ldquo;perfect\u0026rdquo; layout but I have finally come to the conclusion this does not exist! It was time to just take a leap of faith and dive into completing the project.\nWhy did I want to build this though? I have been using my Github repository as a makeshift portfolio and to be honest, it is not all that inspiring to share with others. Even with a fantastic README.md, Github is just plain boring to peruse. I needed a better way to show off my projects and accomplishments. I needed to create a portfolio that people wanted to explore and make it easy for them to learn about me. I also figured this could be an opportunity to share a piece of myself with the world. A chance to share the knowledge I have come across from studying, reading, and building. Who knows, maybe this will inspire someone else\u0026hellip;\n","date":1592803881,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1592803881,"objectID":"9c8fc5dc75abc298a528bb2179079a1e","permalink":"https://vengaza.github.io/post/welcome/","publishdate":"2020-06-22T00:31:21-05:00","relpermalink":"/post/welcome/","section":"post","summary":"A brief introduction into why I created this site and what I hope to accomplish.","tags":[],"title":"Welcome","type":"post"},{"authors":[],"categories":[],"content":"","date":1590532063,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590532063,"objectID":"2b9736b2dd9875c4fa0ede86497f9107","permalink":"https://vengaza.github.io/project/enigma/","publishdate":"2020-05-26T17:27:43-05:00","relpermalink":"/project/enigma/","section":"project","summary":"Various classification machine learning models used as an introductory into the world of AI","tags":["Machine Learning"],"title":"Enigma","type":"project"},{"authors":[],"categories":[],"content":"This is my first foray into the world of UI/UX design and I have to say it was very rewarding. It was refreshing to to approach the project from the design perspective and experiment with various tools to create high fidelity mockups. The project was created using Adobe XD and the project link is active if you want to check it out!\nIntroduction:\nThere is nothing that ignites our inner imagination like the word treasure. Many people grow up watching, listening, and reading fantastic tales of treasure hunting expeditions which lead to unimaginable wealth or power. The real allure of these adventures tends to reside in the journey to the treasure rather than just the treasure itself. The proverbial “thrill of the hunt” keeps both treasure seekers and observers alike engaged by playing on the inquisitiveness and curiosity of human nature.\nHowever, In a world that has become increasingly connected through technological advances, it may sometimes feel as if there are no treasures left to discover and no more swashbuckling adventures to be had. TreasureHunt aims to defeat this notion by bringing people of all ages together to adventure once again. This application creates a significant usability problem because it must find a way to capture the magic of a treasure hunting experience and deliver it as a mobile application. The feeling of wonder and excitement is a fragile one, though, and can easily be lost to frustration with unintuitive UI elements and feelings of inability to continue exploring. We will work with diverse users and iterate based on the surveys we create to ensure our user experience is not sullied or cut short by frustration.\n","date":1590527333,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590527333,"objectID":"da987a8df50f2ad9835779ea7adca639","permalink":"https://vengaza.github.io/project/treasurehunt/","publishdate":"2020-05-26T16:08:53-05:00","relpermalink":"/project/treasurehunt/","section":"project","summary":"My first foray into building a high fidelity mockup for a treasure hunting mobile application with Adobe XD. ","tags":["UI UX"],"title":"TreasureHunt","type":"project"},{"authors":[],"categories":[],"content":"Coming soon\u0026hellip;\n","date":1555886145,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555886145,"objectID":"f603c43c7f550843484a9ef7a44417d5","permalink":"https://vengaza.github.io/talk/ghidra/","publishdate":"2019-04-21T17:35:45-05:00","relpermalink":"/talk/ghidra/","section":"talk","summary":"A software reverse engineering (SRE) suite of tools developed by NSA's Research Directorate in support of the Cybersecurity mission","tags":["Open Source"],"title":"Ghidra","type":"talk"},{"authors":[],"categories":[],"content":"   Check out the full project at my Github https://github.com/venGaza/ukdah\nIntroduction: Awards play a critical role in recognizing employee accomplishments and boosting morale within an organization but most systems are out of date or too reliant upon an extensive human resources staff. The Ukdah team aims to solve this problem by working on a database-backed, responsive website which can be used to track and deliver employee recognition awards. The website will streamline the recognition process by giving users the ability to send recognition to those that they feel are deserving, and it will also provide critical business intelligence data to users overseeing the management of their awards program. Every employee deserves to be recognized for the value he/she brings to their respective organizations while organizations deserve a simple and effective solution to accomplish this. The Ukdah employee recognition website will lead the way!\nUser Perspective: The users of this website will be employees of larger enterprise organizations who are having trouble managing their awards recognition process. These users can be split into two groups which include basic users who are authorized to give out rewards and admin users who serve in a managerial role to oversee the awards program for their entire enterprise. Both users will first encounter an authentication process where they will have to sign into an account, or create one if they have not done so yet. Basic users will need to submit a signature image in order to complete their account sign up since the signature will need to be used for their certificates. The authentication system will also feature a forgotten password recovery process which will email users a forgotten password to the registered email address. Once logged in, a basic user will have the ability to create an award. This will require the user to enter some basic information about the employee being generated and then the system will generate the certificate and email it to the awardee in a PDF format. Basic users will be able to see all the certificates they have awarded and will be able to delete them if they change their mind. When an admin user log in, they will not have the ability to create any awards. Instead, they will be presented with various data statistics in regards to the awards such as amounts, regions, and awarders. The admin user will also have the ability to add/edit/delete both other admin users and basic users.\n","date":1555886145,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555886145,"objectID":"1506df6b7172f1887c629a56af52c7aa","permalink":"https://vengaza.github.io/project/ukdah/","publishdate":"2019-04-21T17:35:45-05:00","relpermalink":"/project/ukdah/","section":"project","summary":"Full-Stack PDF certificate generator built using NodeJS, ExpressJS, and SQLite for capstone","tags":["Full Stack"],"title":"Ukdah","type":"project"}]